// <auto-generated />
using System;
using Film_Application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Film_Application.Migrations
{
    [DbContext(typeof(Data))]
    [Migration("20230519142905_CategoryForMovie")]
    partial class CategoryForMovie
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Film_Application.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Janre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Janre = "Drama"
                        },
                        new
                        {
                            Id = 2,
                            Janre = "Cartoon"
                        },
                        new
                        {
                            Id = 3,
                            Janre = "Documentary"
                        },
                        new
                        {
                            Id = 4,
                            Janre = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            Janre = "Action"
                        },
                        new
                        {
                            Id = 6,
                            Janre = "Documentary"
                        });
                });

            modelBuilder.Entity("Film_Application.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FileCraetedData")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameComapany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FileData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 23,
                            Description = "This is the Life movie description",
                            FileCraetedData = new DateTime(2002, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://pbs.twimg.com/media/DBlhtBmXoAAj-j2?format=jpg&name=large",
                            Name = "Life",
                            NameComapany = "ComanyName1",
                            Price = 390
                        },
                        new
                        {
                            Id = 2,
                            Count = 13,
                            Description = "This is the Shawshank Redemption description",
                            FileCraetedData = new DateTime(2005, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://m.media-amazon.com/images/M/MV5BNDE3ODcxYzMtY2YzZC00NmNlLWJiNDMtZDViZWM2MzIxZDYwXkEyXkFqcGdeQXVyNjAwNDUxODI@._V1_FMjpg_UX1000_.jpg",
                            Name = "The Shawshank Redemption",
                            NameComapany = "ComanyName2",
                            Price = 45
                        },
                        new
                        {
                            Id = 3,
                            Count = 23,
                            Description = "This is the Ghost movie description",
                            FileCraetedData = new DateTime(2009, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://m.media-amazon.com/images/I/71-HovwGgJL._AC_UF1000,1000_QL80_.jpg",
                            Name = "Ghost",
                            NameComapany = "ComanyName3",
                            Price = 454
                        },
                        new
                        {
                            Id = 4,
                            Count = 13,
                            Description = "This is the Race movie description",
                            FileCraetedData = new DateTime(2011, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://m.media-amazon.com/images/M/MV5BMTQ3MDM1MDU2NF5BMl5BanBnXkFtZTgwMzM3OTIzNzE@._V1_.jpg",
                            Name = "Race",
                            NameComapany = "ComanyName4",
                            Price = 32
                        },
                        new
                        {
                            Id = 5,
                            Count = 13,
                            Description = "This is the Scoob movie description",
                            FileCraetedData = new DateTime(2011, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://parentpreviews.com/images/made/legacy-pics/scoob-5_668_330_80_int_s_c1.jpg",
                            Name = "Scoob",
                            NameComapany = "ComanyName5",
                            Price = 390
                        },
                        new
                        {
                            Id = 6,
                            Count = 22,
                            Description = "This is the Cold Soles movie description",
                            FileCraetedData = new DateTime(2011, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "https://m.media-amazon.com/images/M/MV5BOWI2MTFmMjAtNjM1ZC00ZGNhLWJjNWQtOWMwZDI3MzYxOTQwXkEyXkFqcGdeQXVyMjIxNTg0MDQ@._V1_.jpg",
                            Name = "Cold Soles",
                            NameComapany = "NameCompany6",
                            Price = 390
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
